<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
	<application>jeideant</application>
	<module>crawl</module>
	<version>1</version>
	<instance-class>F1</instance-class>
	<automatic-scaling>
		<min-idle-instances>1</min-idle-instances>     <!-- ‘automatic’ is the default value. -->
		<max-idle-instances>2</max-idle-instances>     <!-- ‘automatic’ is the default value. -->
		<min-pending-latency>automatic</min-pending-latency>
		<max-pending-latency>30ms</max-pending-latency>
	</automatic-scaling>
	<!-- Allows App Engine to send multiple requests to one instance in parallel: -->
	<threadsafe>true</threadsafe>
	<!-- Configure java.util.logging -->
	<system-properties>
		<property name="java.util.logging.config.file" value="WEB-INF/logging.properties" />
		<!-- <property name="appengine.orm.disable.duplicate.emf.exception" value="true" 
			/> -->
	</system-properties>
	<!-- HTTP Sessions are disabled by default. To enable HTTP sessions specify: 
		<sessions-enabled>true</sessions-enabled> It's possible to reduce request 
		latency by configuring your application to asynchronously write HTTP session 
		data to the datastore: <async-session-persistence enabled="true" /> With 
		this feature enabled, there is a very small chance your app will see stale 
		session data. For details, see http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions -->
	<static-files>
		<include path="/favicon.ico" />
	</static-files>
	<inbound-services>
		<service>mail_bounce</service>
		<service>xmpp_message</service>
		<service>xmpp_presence</service>
		<service>xmpp_subscribe</service>
		<service>xmpp_error</service>
	</inbound-services>
</appengine-web-app>